/*返回打开它的原页面*/
$(document).on('click', '.back3', function() {
	window.history.back();
});
/*仪表*/
var gaugeChart, gaugeoption, imgDataFn;
var imgData, imgData2;

var pointerImg = "data:img/png;base64,iVBORw0KGgoAAAANSUhEUgAAADsAAAAVCAMAAADPXWbHAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAACu1BMVEVQ//////8AbVL////////////////////////////////////////////////////////////////////////////////////////////////////////C3NaXw7i41s/5/Pv///////////+Iu64WemEOdVtcopD3+vr///////////////////9copAshnD0+fj///////////////////+TwbZVnoz///////9Q//9Q//9Q//9Q//9Q//9Q//9Q//9Q//9Q//+q//+t///Y///d//8khW4GcFbr9PH///////////9Q//9Q//9Q//9Q//9Q//9Q//9Q//9Q//9Q//9Q//9Q//9Q//9Q//9Q//9Q//9Q//9Q//9Q//9Q//9Q//9Q//9Q//9Q//9Q//9Q//9Q//9Q//9Q//9Q//+D//+F//++//+29/ZQ//9Q//9Q//9Q//9Q//9Q//9Q//9Q//9Q//9Q//9Q//9Q//9Q//9Q//9Q//9Q//9Q//9Q//9Q//+F//+I///B//+m6ud/tqj///9Q//9Q//9Q//9Q//9Q//9Q//9Q//9Q//9Q//9Q//9Q//9Q//9Q//9Q//9Q//9Q//9Q//+C///A//+4+PcCblOcxrxQ///P///X///x///w//8mhG4HcVf///////+bxrtaoY////////9pqZkBblMxiXP///////8ff2cTeF9sq5v7/fz////////////////U5uKsz8fQ5N////////////////////////////////////////////////////////////////8AbVIBblMqhW5SnIo8j3sCblMOdVux0sr////U5uIkgmqnzcPY6eUEb1UVeWD9/v5OmocyinRwrZ4Sd177/fxLmIWZxbrX6OQFcFUKc1mjysHN4t0hgGhNmYYzinWzJHl+AAAAynRSTlMAAAABAwkeKzMyLSAMOT8lBjdbeIV+ZD0vCgJFe5almoaBU0Sr7PS/h1UnBzV5wN2Ig0EPG1Smw2kjAQgLEBYaICQsUGCQpOr5ioI2MQIDBQYNExcjKS40OUBGTVVaZGlzd3t/goaJjI6RqKrLzwcKFBsfJyswPUJLUFRZXmJna2+pq83Tr0kECQwOERgeITJBTlNWXWVobKfMz/6jDzdCfZHk+BpXpMFoJLn+2RBG5e+4higqSH2QnZIwBThcf2U+Cx87QzQdIQ0EWMhNKAAAAAFiS0dEAf8CLd4AAAAHdElNRQfhBxMQLhDr1vzeAAAB7UlEQVQ4y2NgIAIwIgAzCzOcTYxWuF5WNnYODk4ubh5S9TKxcHNwcPDy8QJJfgEmJlL0CrBzCAoJi4iIiIqJc0hIkqJXip1DWkZERFZOXkFEUYlDQoAEvWwcyooiKqqnTp1SU9cQ0eTQIl6vNqeOroje6VNnzp47f0rfwNCIw5hovSYcpiJmpy9cvHTp0uUrp8xFLDgsCem1sraxtbN3cHRydnF1cz919RIIXLvu4enl7cMMVmDl6+cfYG0TaBsUbO8QEhoWHhEZFR0TGxefkJiUnJKalp6RmZWdk3v+xk2w3ku3TsmJKHMIMFj5+eflB9oWBBcWhRSXlIZHlJVHVVRWVdfU1tU3IPQ2NjW3nLoN0XrpzqlWkTYOVgagne0BeR2dXd1BPYW9fcUlYf0RZROiJk6aPGXqtOkJML0zsmfOmn33HkTv/VNzRIw4tIkIKf+Ojo658+YvWLjo1AOw1oePFnsqQv1LTDgv4Vgqsmz24ydArU+fnVousoJjJQnx6y0jsmr1qWfPX5w+tUYBGL9rSUlX6xRF5qwHpqsNGzcB09VmUtLzFo6t20REtu/YKSLipcmxS5uUfLSbnWPPXl1gPtq3/wCHxEGS8iCT1CFgzj18RPwo6fkXVG4cY+fk4OA6foKMMgcETkrBmQD1grOTSytoFwAAAABJRU5ErkJggg==";
var pointerImg2 = "data:img/png;base64,iVBORw0KGgoAAAANSUhEUgAAADwAAAAUCAMAAADm3a4bAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAC5VBMVEUKeNL///////////////////////////////////////////////////////////////////////////////////////////////////////////+52PJ2s+Znq+OMv+rq8/v////////////////////D3vQti9gRfNNprOP9/v/////////////////////C3fQVftRRn9////////////////////8si9iZx+wKeNIKeNIKeNIKeNIKeNIKeNIKeNIKeNIKeNIKeNIKeNIKeNIKeNIKeNIKeNIKeNIKeNIKeNIKeNIKeNIKeNIKeNIKeNIKeNIKeNIKeNIKeNIYgNQ7k9tGmt1jqeNJm944kdr///////8KeNIKeNIKeNIKeNIKeNIKeNIKeNIKeNIKeNIKeNIKeNIKeNIKeNIKeNIKeNIKeNIKeNIKeNIKeNIKeNIKeNIKeNIKeNIKeNIKeNIKeNIKeNIKeNIKeNIKeNIKeNIKeNIKeNIKeNIVftQoiNc1kNoqitgUfdT///////8KeNIKeNIKeNI3kdoniNcMedL///8KeNIKeNIKeNIKeNIKeNIKeNIKeNIKeNIKeNIKeNIKeNIKeNIKeNIKeNIKeNIKeNIKeNIKeNIYf9Q1j9lGmd1ZpOEdg9b////////h7/oPe9NXouD///9fp+IWf9Tb6/j////////////5/P5Gmd2s0fD///////+NwOovjdkOetMcgtVToN/W6Pf///////////////////////////////////////////////////////////////////////////////////////8KeNIti9h8t+eIvelYo+ANetNorOP6/P7////H4PUZgNUdgtWHvemizO6lze48lNt4teaYx+z3+/4Pe9NFmd2XxuwWf9Q0kNqAueeZx+ze7fnS5vf+/v9dpuEghNar0fD8/f7k8PpiqeIUfdQihdYLedIATEP7AAAA0XRSTlMACA0QDAMFHC0zMiUVMUFMUUk4UnmFgmc+BjZumra9rIuASyoCNJfh+byFg0YbHlWX9ck1BAEwfOOmAQMGCAkNDhIVFx0fJCkqMzU6QEJLTlJaXGRncI+Zv87ZayECBQcKERQYHCImKy80OD1HUFVeY2xwdHh8gIOHio2PkpSVnq265PV4KAsZHrzm/SkEDA8TGiAlJzE3PD9ISldbZW18lqbE7nU9jfvGYcL0j0ITQ4bRnmVTq+D778iQczcHL01+ZhkJV3B9dkQaHw4XIysmD+w6Y50AAAABYktHRAH/Ai3eAAAAB3RJTUUH4QcTEC0BqkuP7wAAAeRJREFUOMtjYCARMDIxs7CSqgkM2Ng5OIGAi5uZdL08vJycfPwCgkKcnNxsJOpl5+QUFhEFAjFxCU4OSdLs5ZSSFhWVkZWTVxBVVOJUViFBrySvqrSomvpFINDQ1NLW4dQlQbMep76ogeHFS5evXL120UhUxJjXhGi9pmaq5qIWF6/fuHnz5q3bFy1FhTl5UBRYWVvb2NrZOzg6Obu4url7eHp5+/j6+QcEBgWHhIaFR0RevHP3HlDzzfsXo0SjOWMYYq3j4hPsE5OSU1LT0jMys7J9c/xy8wLzC0IKi4pLSsvKKyqrqmtq6+obGiObLj54+Aik+fGTZtEWzlaw5jZ7R6f2DkKaOyO7Lj59+Ayk+ebzblFzzh5kV8da98bHt/X1T0iamDJp8pSMqdOmz5g5K2D2nIK584rmL1i4KOrii5evQHpfX1wsuoSTm+gAY+NcKrps+ZM3IL1v311cIbqSlLjq4ZQWXXXx/YePNz99vrh6jehaThbiNa/jXK+9YePFi1++frtouEl0M6cyCYnEtJVzi6jo1m3bv+3YuUt09x5OJhI0M+zdx7n/ADBbaAHxwT2ch0jRy8BwmINT6MjRYweObz7ByXmSNL0MDCanuDghQPk0qXqBQPLMWeVz5/UuQHgAh8S+jEDd520AAAAASUVORK5CYII=";
var scaleplateImg = "data:img/png;base64,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";

var scaleplateImg2 = "data:img/png;base64,"

var detectionData = function(str, col) {
	var color;
	switch(Math.ceil(str * 10)) {
		case 1:
			color = new echarts.graphic.LinearGradient(1, 1, 0, 0, [{
				offset: 0,
				color: col
			}, {
				offset: 0.8,
				color: '#ffffff'
			}, {
				offset: 1,
				color: '#ffffff'
			}]);
			break;
		case 2:
			color = new echarts.graphic.LinearGradient(1, 1, 0, 0, [{
				offset: 0,
				color: col
			}, {
				offset: 0.6,
				color: '#ffffff'
			}, {
				offset: 1,
				color: '#ffffff'
			}]);
			break;
		case 3:
			color = new echarts.graphic.LinearGradient(1, 1, 0, 0, [{
				offset: 0,
				color: col
			}, {
				offset: 0.6,
				color: '#ffffff'
			}, {
				offset: 1,
				color: '#ffffff'
			}]);
			break;
		case 4:
			color = new echarts.graphic.LinearGradient(0, 1, 1, 0, [{
				offset: 0,
				color: col
			}, {
				offset: 0.6,
				color: '#ffffff'
			}, {
				offset: 1,
				color: '#ffffff'
			}]);
			break;
		case 5:
			color = new echarts.graphic.LinearGradient(0, 1, 1, 0, [{
				offset: 0,
				color: col
			}, {
				offset: 0.6,
				color: '#ffffff'
			}, {
				offset: 1,
				color: '#ffffff'
			}]);
			break;
		case 6:
			color = new echarts.graphic.LinearGradient(0, 1, 1, 0, [{
				offset: 0,
				color: col
			}, {
				offset: 0.7,
				color: '#ffffff'
			}, {
				offset: 1,
				color: '#ffffff'
			}]);
			break;
		case 7:
			color = new echarts.graphic.LinearGradient(0, 1, 1, 0, [{
				offset: 0,
				color: col
			}, {
				offset: 0.8,
				color: '#ffffff'
			}, {
				offset: 1,
				color: '#ffffff'
			}]);
			break;
		case 8:
			color = new echarts.graphic.LinearGradient(0, 1, 1, 0, [{
				offset: 0,
				color: col
			}, {
				offset: 0.8,
				color: '#ffffff'
			}, {
				offset: 1,
				color: '#ffffff'
			}]);
			break;
		case 9:
			color = new echarts.graphic.LinearGradient(0, 1, 1, 1, [{
				offset: 0,
				color: col
			}, {
				offset: 0.9,
				color: '#ffffff'
			}, {
				offset: 1,
				color: '#ffffff'
			}]);
			break;
		default:
			color = new echarts.graphic.LinearGradient(0.2, 1, 0.8, 1, [{
				offset: 0,
				color: col
			}, {
				offset: 1,
				color: '#ffffff'
			}]);
	}
	return color;
}

var angleData = function(str) {
	return(135 + 270 * str) * Math.PI / 180
}
var img = new Image();
img.src = scaleplateImg;
var img2 = new Image();
img2.src = scaleplateImg2;
imgDataFn = function(val, val2) {
	(function() {
		var c = document.createElement("canvas");
		c.width = 140;
		c.height = 118;
		var ctx = c.getContext("2d");
		ctx.drawImage(img, 0, 0);
		ctx.globalCompositeOperation = "destination-in";
		ctx.arc(70, 70, 70, angleData(0), angleData(val));
		ctx.lineTo(70, 70);
		ctx.fill();
		imgData = c.toDataURL('png');
	})();
	(function() {
		var c = document.createElement("canvas");
		c.width = 140;
		c.height = 118;
		var ctx = c.getContext("2d");
		ctx.drawImage(img2, 0, 0);
		ctx.globalCompositeOperation = "destination-in";
		ctx.arc(70, 70, 70, angleData(0), angleData(val2));
		ctx.lineTo(70, 70);
		ctx.fill();
		imgData2 = c.toDataURL('png');
	})();
};

var val = 0,
	val2 = 0;

// 基于准备好的dom，初始化echarts实例
var gaugeDom = document.getElementById('gauge');
gaugeChart = echarts.init(gaugeDom);
gaugeoption = {
	graphic: []
};
var graphic = gaugeoption.graphic;
var drawAxisTick = {
	type: 'arc',
	id: 'axisTick',
	z: -10,
	shape: {
		cx: 113,
		cy: 140,
		r: 80,
		startAngle: angleData(0),
		endAngle: angleData(val)
	},
	style: {
		stroke: detectionData(val, '#54ffff'),
		lineWidth: 5
	}
};
graphic.push(drawAxisTick);
var drawPointer = {
	type: 'image',
	id: 'pointer',
	bounding: 'raw',
	origin: [113, 140],
	rotation: -angleData(val),
	style: {
		width: 59,
		height: 21,
		x: 143,
		y: 130,
		image: pointerImg
	}
};
graphic.push(drawPointer);
var drawTitle = {
	type: 'text',
	id: 'title',
	z: 1,
	style: {
		x: 112,
		y: 160,
		textAlign: 'center',
		fill: '#fff',
		text: '0',
		font: '38px Microsoft YaHei'
	}
};
graphic.push(drawTitle);
var drawText = {
	type: 'text',
	id: 'text',
	z: 1,
	style: {
		x: 112,
		y: 180,
		textAlign: 'center',
		fill: '#fff',
		text: '招商总额\n（亿元）',
		font: '14px Microsoft YaHei'
	}
};
graphic.push(drawText);
//////
var drawAxisTick2 = {
	type: 'arc',
	id: 'axisTick2',
	z: -10,
	shape: {
		cx: 316,
		cy: 140,
		r: 80,
		startAngle: angleData(0),
		endAngle: angleData(val2)
	},
	style: {
		stroke: detectionData(val2, '#167ed4'),
		lineWidth: 5
	}
};
graphic.push(drawAxisTick2);
var drawPointer2 = {
	type: 'image',
	id: 'pointer2',
	bounding: 'raw',
	origin: [316, 140],
	rotation: -angleData(val2),
	style: {
		width: 59,
		height: 21,
		x: 348,
		y: 130,
		image: pointerImg2
	}
};
graphic.push(drawPointer2);
var drawTitle2 = {
	type: 'text',
	id: 'title2',
	z: 1,
	style: {
		x: 317,
		y: 160,
		textAlign: 'center',
		fill: '#fff',
		text: '0',
		font: '38px Microsoft YaHei'
	}
};
graphic.push(drawTitle2);
var drawText2 = {
	type: 'text',
	id: 'text2',
	z: 1,
	style: {
		x: 317,
		y: 180,
		textAlign: 'center',
		fill: '#fff',
		text: '项目数',
		font: '14px Microsoft YaHei'
	}
};
graphic.push(drawText2);

gaugeChart.setOption(gaugeoption);

var animateFn = function(v1, v2, vI1, vI2) {
	var val1 = 0,
		val2 = 0,
		valI1 = 0,
		valI2 = 0,
		valI1_i = vI1 / (v1 / 0.02),
		valI2_i = vI2 / (v2 / 0.02);
	var time1 = function() {
		setTimeout(function() {
			imgDataFn(val1, val2);

			gaugeChart.setOption({
				graphic: [{
						id: 'axisTick',
						shape: {
							endAngle: angleData(val1)
						},
						style: {
							stroke: detectionData(val1, '#54ffff'),
						}
					}, {
						id: 'pointer',
						rotation: -angleData(val1),
					}, {
						type: 'image',
						id: 'scaleplate',
						z: -10,
						scale: [1.14, 1.14],
						$action: 'replace',
						style: {
							width: 140,
							height: 118,
							x: 30,
							y: 54,
							opacity: 0.3,
							image: imgData,
						},
					}, {
						id: 'title',
						style: {
							text: valI1
						}
					},
					//////
					{
						id: 'axisTick2',
						shape: {
							endAngle: angleData(val2)
						},
						style: {
							stroke: detectionData(val2, '#54ffff'),
						}
					}, {
						id: 'pointer2',
						rotation: -angleData(val2),
					}, {
						type: 'image',
						id: 'scaleplate2',
						z: -10,
						scale: [1.14, 1.14],
						$action: 'replace',
						style: {
							width: 140,
							height: 118,
							x: 206,
							y: 54,
							opacity: 0.3,
							image: imgData2,
						}
					}, {
						id: 'title2',
						style: {
							text: valI2
						}
					},
				]
			});
			if(val1 < v1 || val2 < v2) {
				if(val1 < v1) {
					val1 = val1 + 0.02;
					valI1 = Math.ceil(valI1 + valI1_i);
					if(valI1 > vI1) valI1 = vI1;
				}
				if(val2 < v2) {
					val2 = val2 + 0.02;
					valI2 = Math.ceil(valI2 + valI2_i);
					if(valI2 > vI2) valI2 = vI2;
				}
				time1();
			}
		}, 30);
	};
	time1();
};

/*雷达图*/
var radarChart, radaroption;
var radarDom = document.getElementById('radar');
var radarChart = echarts.init(radarDom);
radaroption = {
	name: {
		textStyle: {
			color: '#9ad1f3',
			fontSize: 14,
		}
	},
	radar: {
		indicator: [{
				name: '创新指数',
				max: 5
			},
			{
				name: '经济效益指数',
				max: 5
			},
			{
				name: '带动就业指数',
				max: 5
			},
			{
				name: '社会声誉指数',
				max: 5
			}
		],
		center: ['50%', '55%'],
		radius: 95,
		splitArea: {
			areaStyle: {
				color: ['rgba(7, 30, 61, 0.8)', 'rgba(7, 30, 61, 0.6)', 'rgba(7, 30, 61, 0.5)', 'rgba(7, 30, 61, 0.5)', 'rgba(7, 30, 61, 0.3)'],
				shadowColor: 'rgba(0, 0, 0, 0.2)',
				shadowBlur: 10
			}
		},
		splitLine: {
			lineStyle: {
				color: '#0a2e50'
			}
		},
	},

	series: {
		type: 'radar',
		itemStyle: {
			emphasis: {
				lineStyle: {
					width: 3
				}
			}
		},
		// areaStyle: {normal: {}},
		data: [{
				value: [3, 3, 4, 3],
				name: '2015',
				symbol: 'circle',
				lineStyle: {
					normal: {
						color: '#ffb611'
					}
				}
			},
			{
				value: [4, 3, 4, 4],
				name: '2016',
				symbol: 'circle',
				lineStyle: {
					normal: {
						color: '#0a78d2'
					}
				}
			},
			{
				value: [4, 4, 5, 4],
				name: '2017',
				symbol: 'circle',
				lineStyle: {
					normal: {
						color: '#51ffff'
					}
				}
			}
		]
	}
};

radarChart.setOption(radaroption);

/*折线图*/
var lineChart, lineoption;
var lineDom = document.getElementById('line');
var lineChart = echarts.init(lineDom);
lineoption = {
	grid: {
		top: '66px',
		bottom: '50px'
	},
	xAxis: {
		type: 'category',
		boundaryGap: true,
		data: ['2015', '2016', '2017'],
		axisLine: {
			lineStyle: {
				color: '#4980b2'
			}
		},
		splitLine: {
			show: true,
			lineStyle: {
				color: '#143c60'
			},
			//interval: 1
		}
	},
	yAxis: {
		type: 'value',
		inverse: true,
		max: 50,
		axisLine: {
			lineStyle: {
				color: '#4980b2'
			}
		},
		splitLine: {
			show: true,
			lineStyle: {
				color: '#143c60'
			}
		},
		splitArea: {
			show: true,
			areaStyle: {
				color: ['rgba(7,32,64,0.2)', 'rgba(7,32,64,0.8)']
			}
		}
	},
	series: [{
		name: '',
		type: 'line',
		data: [
			['2015', 24],
			['2016', 20],
			['2017', 18]
		],
		symbolSize: 10,
		symbol: 'circle',
		itemStyle: {
			normal: {
				color: "#000000",
				borderColor: '#2fa2c9',
			}
		},
		lineStyle: {
			normal: {
				color: {
					type: 'linear',
					x: 0,
					y: 0,
					x2: 1,
					y2: 1,
					colorStops: [{
						offset: 0,
						color: '#00ff4e' // 0% 处的颜色
					}, {
						offset: 1,
						color: '#89fffe' // 100% 处的颜色
					}],
					globalCoord: false // 缺省为 false
				}
			}
		}

	}]
};
lineChart.setOption(lineoption);

/*散点图*/
var scatterChart, scatteroption, scatterDataFn;
var scatterDom = document.getElementById('scatter');
var scatterChart = echarts.init(scatterDom);

var scatterData = [
	['2015年8月', 5353],
	['2015年9月', 5126],
	['2015年10月', 4466],
	['2015年11月', 4960],
	['2015年12月', 4461],
	['2016年1月', 5579],
	['2016年2月', 4597],
	['2016年3月', 5779],
	['2016年4月', 4771],
	['2016年5月', 4315],
	['2016年6月', 5356],
	['2016年7月', 5808],
	['2016年8月', 4040],
	['2016年9月', 5821],
	['2016年10月', 4831],
	['2016年11月', 5016],
	['2016年12月', 4480],
	['2017年1月', 6762],
	['2017年2月', 6478],
	['2017年3月', 6826],
	['2017年4月', 6385],
	['2017年5月', 7558],
	['2017年6月', 7595],
	['2017年7月', 7069],
];
var scatterDataColor = [];
scatterDataColor[0] = new echarts.graphic.RadialGradient(0.4, 0.3, 1, [{
	offset: 0,
	color: 'rgba(123,161,223,0.6)'
}, {
	offset: 1,
	color: 'rgba(123,161,223,0.8)'
}]);
scatterDataColor[1] = new echarts.graphic.RadialGradient(0.4, 0.3, 1, [{
	offset: 0,
	color: 'rgba(81,255,255,0.6)'
}, {
	offset: 1,
	color: 'rgba(81,255,255,0.8)'
}]);
scatterDataColor[2] = new echarts.graphic.RadialGradient(0.4, 0.3, 1, [{
	offset: 0,
	color: 'rgba(248,95,115,0.6)'
}, {
	offset: 1,
	color: 'rgba(253,70,94,0.8)'
}]);
scatterDataColor[3] = new echarts.graphic.RadialGradient(0.4, 0.3, 1, [{
	offset: 0,
	color: 'rgba(255,104,2,0.6)'
}, {
	offset: 1,
	color: 'rgba(255,104,1,0.8)'
}]);

scatterDataFn = function(scatterData) {
	var _scatterData = [];
	for(var i = 0; i < scatterData.length; i++) {
		_scatterData[i] = [];
		_scatterData[i][0] = scatterData[i][0];
		_scatterData[i][1] = scatterData[i][1];
		_scatterData[i][2] = parseInt(Math.random() * 20);
		_scatterData[i][3] = Math.floor(Math.random() * 4);
	}
	return _scatterData;
}

scatteroption = {
	grid: {
		top: '100px',
		bottom: '55px',
		left: '110px',
		right: '46px'
	},
	title: {
		text: '吸引力指数',
		top: '64px',
		left: '110px',
		textAlign: 'right',
		textStyle: {
			color: '#2f7aa5',
			fontSize: 16,
			fontWeight: 'normal',
		}
	},

	xAxis: {
		type: 'category',
		boundaryGap: true,
		data: ['2015年8月',
			'2015年9月',
			'2015年10月',
			'2015年11月',
			'2015年12月',
			'2016年1月',
			'2016年2月',
			'2016年3月',
			'2016年4月',
			'2016年5月',
			'2016年6月',
			'2016年7月',
			'2016年8月',
			'2016年9月',
			'2016年10月',
			'2016年11月',
			'2016年12月',
			'2017年1月',
			'2017年2月',
			'2017年3月',
			'2017年4月',
			'2017年5月',
			'2017年6月',
			'2017年7月',
		],
		axisLine: {
			lineStyle: {
				color: '#4980b2'
			}
		},
		axisLabel: {
			margin: 12,
			textStyle: {
				color: '#9ad1f3'
			}
		},
		splitLine: {
			show: false,
		},
	},
	yAxis: {
		scale: true,
		axisLine: {
			lineStyle: {
				color: '#4980b2'
			}
		},
		axisLabel: {
			margin: 12,
			textStyle: {
				color: '#9ad1f3'
			}
		},
		splitLine: {
			show: false,
		},
	},
	series: {
		data: scatterDataFn(scatterData),
		type: 'scatter',
		symbolSize: function(data) {
			return Math.sqrt(data[2] * 100);
		},
		label: {
			emphasis: {
				show: false,
				formatter: function(param) {
					return param.data[2];
				},
				position: 'top'
			}
		},
		itemStyle: {
			normal: {
				shadowBlur: 10,
				shadowColor: 'rgba(120, 36, 50, 0.5)',
				shadowOffsetY: 5,
				color: function(v) {
					return scatterDataColor[v.data[3]]
				}
			}
		}
	}

};
scatterChart.setOption(scatteroption);

/*字符云*/
var wordCloudChart, wordCloudoption, dataWCFn;
var wordCloudDom = document.getElementById('wordCloud');
var wordCloudChart = echarts.init(wordCloudDom);

var dataWC = [
	['云南	', 0.2],
	['招商引资', 0.1],
	['软环境', 0.1],
	['结构不合理', 0.1],
	['改善', 0.1],
	['旅游', 0.05],
	['自然环境', 0.05],
	['房地产', 0.05],
	['消费', 0.05],
	['投资', 0.05],
	['出口', 0.05],
	['金融', 0.02],
	['合同欺诈', 0.01],
	['滞后', 0.01],
	['发展', 0.01],
	['空间', 0.01],
	['虹吸效应', 0.01],
	['提高服务水平', 0.01],
	['渠道', 0.01],
	['不专业', 0.01],
	['香格里拉', 0.2],
	['大理', 0.1],
	['彩云', 0.1],
	['美女', 0.1],
	['女企业家', 0.1],
	['注册', 0.1],
	['满意度', 0.1],
	['消费高', 0.1],
	['旅游业', 0.05],
	['绿色食品', 0.05],
	['基础设施', 0.05],
	['净流出', 0.05],
	['减税', 0.05],
	['退税', 0.05],
	['新区', 0.02],
	['服务业', 0.02],
	['东北人', 0.02],
	['干预', 0.02],
	['亲情牌', 0.02],
	['开放', 0.01]
];
var colorWC = ['#12f7a7', '#50ffff', '#2f979c', '#00bc91'];

dataWCFn = function(dataWC) {
	var _dataWC = [];
	for(var i = 0; i < dataWC.length; i++) {
		_dataWC[i] = {};
		_dataWC[i]['name'] = dataWC[i][0];
		_dataWC[i]['value'] = dataWC[i][1]
	}
	return _dataWC;
}

var wordCloudOption = {
	tooltip: {
		show: false
	},
	series: [{
		type: 'wordCloud',
		gridSize: 1,
		//sizeRange: [10, 35],
		rotationRange: [0, 90],
		rotationStep: 90,
		//maskImage: maskImage,
		textStyle: {
			normal: {
				color: function(v) {
					return colorWC[v.dataIndex % (colorWC.length)]
				}
			},
			emphasis: {
				color: '#fff',
				borderColor: '#fff'
			}
		},
		width: 400,
		height: 260,
		data: dataWCFn(dataWC)
	}]
};

wordCloudChart.setOption(wordCloudOption);
/*调用函数*/
$(function() {
	setTimeout(function() {
		animateFn(0.81, 0.93, 8145.1, 93);
	}, 30)
	setInterval(function() {
		animateFn(0.81, 0.93, 8145.1, 93);
		radarChart.clear();
		radarChart.setOption(radaroption);
		lineChart.clear();
		lineChart.setOption(lineoption);
		scatterChart.clear();
		scatterChart.setOption(scatteroption);
		wordCloudChart.clear();
		wordCloudChart.setOption(wordCloudOption);
	}, 6000);

	var cityAll = $('#city g');
	var cityData = [
		['昆明市', 13, 1988.7],
		['曲靖市', 7, 561.2],
		['玉溪市', 6, 376.3],
		['保山市', 8, 432],
		['昭通市', 8, 421],
		['丽江市', 7, 510],
		['普洱市', 8, 566],
		['临沧市', 6, 409],
		['德宏傣族景颇族自治州', 6, 300],
		['怒江傈僳族自治州', 5, 213],
		['迪庆藏族自治州', 3, 252],
		['大理白族自治州', 5, 988.5],
		['楚雄彝族自治州', 2, 88.9],
		['红河哈尼族彝族自治州', 3, 90.1],
		['文山壮族苗族自治州', 4, 45.6],
		['西双版纳傣族自治州', 2, 902.8]
	];

	var cityI = 0;
	setInterval(function() {
		cityAll.eq(cityI).find('text').attr('style', '');

		cityI = (cityI + 1) % 16;
		var $text = cityAll.eq(cityI).find('text');
		var $ellipse = cityAll.eq(cityI).find('ellipse');
		$text.attr('style', 'display:none');
		var name = $text.text();
		var $cx = $ellipse.attr('cx');
		var $cy = $ellipse.attr('cy');
		$('#svgActive').attr('transform', 'translate(' + $cx + ',' + $cy + ')');
		$('#active-name').text(name);

		$('#nian').html('2017');
		$('#shi').html(cityData[cityI][0]);
		$('#xiangmu').html(cityData[cityI][1]);
		$('#jine').html(cityData[cityI][2]);
	}, 2000)
});